name: Multi-Job Action

on:
  push:
    branches:
      - main

jobs:
  
  job1:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Python Packages
        run: pip install requests
  
  
  job2:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14.x'

    - name: Install Newman
      run: |
        npm install -g newman
        npm install -g newman-reporter-junitfull
        npm install -g newman-reporter-junitxray

    - name: Run Newman
      id: newman
      run: newman run CVC_Apis.postman_collection.json --reporters junitfull --reporter-junitfull-export /home/runner/work/postman-newman/postman-newman/junit-report.xml || echo "::set-output name=failed::true"
      continue-on-error: true
    - name: Check directory
      run: |
          pwd
          ls
      
    - name: Upload JUnit report
      if: steps.newman.outputs.failed == 'true'
      uses: actions/upload-artifact@v2
      with:
        name: junit-report
        path: /home/runner/work/postman-newman/postman-newman/junit-report.xml
        
        
        
  job3:
    runs-on: ubuntu-latest
    needs: job2

    steps:
      - uses: actions/checkout@v2

      - name: Install Requests Module
        run: |
          python -m pip install requests
          
          
      - name: Download report artifact
        uses: actions/download-artifact@v2
        with:
          name: junit-report
          path: /home/runner/work/postman-newman/postman-newman/junit-report.xml    
      

      - name: Fetch token from Python script
        run: |
            token=$(python3 postman_upload.py)
            echo $token
        env:
            XRAY_TOKEN: ${{ secrets.XRAY_TOKEN }}
      
        
      - name: Upload results to Xray
        run: |
            curl -H "Content-Type: text/xml" -H "Authorization: Bearer $token" --data @/home/runner/work/postman-newman/postman-newman/junit-report.xml "https://xray.cloud.getxray.app/api/v2/import/execution/junit?projectKey=CQ"
        env:
          token: ${{ steps.fetch_token.outputs.token }}
          
      - name: Check directory
        run: |
            pwd
            ls


      
 
        
        
    
